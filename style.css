* {
    margin: 0;
    padding: 0;
    font-family: 'poppins', sans-serif;
    box-sizing: border-box;
}

.hero {
    width: 100%;
    min-height: 100vh;
    background: linear-gradient(45deg, #08001f, #30197d);
    color: #fff;
    position: relative;
}

/* The 45deg is the angle I want the graident to mve at, it will start from top left to the bottom right. The linear-gradient function creates a smooth transition from the dark blue color (#08001f) to the medium purple color (#30197d) at a 45-degree angle. */

.container {
    width: 800px;
    height: 180px;
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
}

/* top: 50%; left: 50%;: Moves the top-left corner of the element to the center of the parent, transform: translate(-50%, -50%);: Shifts the element back by 50% of its own width and height, effectively centering it. */

.clock {
    width: 100%;
    height: 100%;
    background: rgba(235, 0, 255, 0.11);
    border-radius: 10px;
    display: flex;
    align-items: center;
    justify-content: center;
    backdrop-filter: blur(40px);
}

.container::before {
    content: '';
    width: 180px;
    height: 180px;
    background: #f41b75;
    border-radius: 5px;
    position: absolute;
    left: -50px;
    top: -50px;
    z-index: -1;
}

/* This adds a pink box at the top left of our horizontal box in the container class. The below code is for the circle */
.container::after {
    content: '';
    width: 180px;
    height: 180px;
    background: blue;
    border-radius: 50%;
    position: absolute;
    right: -30px;
    bottom: -50px;
    z-index: -1;
}

.clock span {
    font-size: 80px;
    width: 110px;
    display: inline-block;
    text-align: center;
    position: relative;
}

/* this sets up the 00:00:00 in the clock div class to be bigger and be centered */

.clock span::after {
    font-size: 15px;
    position: absolute;
    bottom: -5px;
    left: 50%;
    transform: translateX(-50%)
}

/* This is for adding text like hours minutes etc. on top of the clock class so its content after as its added after.Transform is used to apply a transformation. TranslateX function to move an element along the X-axis (horizontally),-50%: Moves the element to the left by 50% of its own width.*/

#hrs::after {
    content: 'Hours';
}

#min::after {
    content: 'Minutes';
}

#sec::after {
    content: 'Seconds';
}

/* This adds the text of hours, mins and sec ontop of the clock therefore its ::after as its added after and displayed after*/